{"version":3,"sources":["pages/user/History.js","functions/user.js","components/nav/UserNav.js","components/order/pdfStyles.js","components/order/Invoice.js"],"names":["History","useSelector","state","user","cart","useDispatch","useState","orders","setOrders","loading","setLoading","useEffect","loadOrders","getUserOrders","token","then","res","console","log","data","showOrderInTable","order","className","scope","products","map","p","i","product","title","price","brand","color","count","shipping","CheckCircleOutlined","style","CloseCircleOutlined","orderStatus","showDowloadLink","document","Invoice","fileName","UserNav","length","userCart","authtoken","a","axios","post","process","headers","getUserCart","get","emptyUserCart","delete","applyDiscount","coupon","createOrder","paymentIntent","addItemToWishlist","productId","getUserWishlist","removeProductFromWishlist","put","to","styles","StyleSheet","create","body","paddingTop","paddingBottom","paddingHorizontal","fontSize","textAlign","author","marginBottom","subtitle","margin","text","marginTop","image","marginVertical","marginHorizontal","header","footer","padding","pageNumber","position","bottom","left","right","size","fixed","Date","toLocaleString","getContent","x","paymentInfo","status","createdAt","toLocaleDateString","id","stripeResponse","amount","shippingAdd","name","mobileNum","email","add"],"mappings":"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","file":"static/js/16.b3e3ca6f.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport UserNav from \"../../components/nav/UserNav\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CheckCircleOutlined, CloseCircleOutlined } from \"@ant-design/icons\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getUserOrders } from \"../../functions/user\";\r\nimport ShowPaymentInfo from \"../../components/cards/ShowPaymentInfo\";\r\nimport { PDFDownloadLink } from \"@react-pdf/renderer\";\r\nimport Invoice from \"../../components/order/Invoice\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst History = () => {\r\n  const { user, cart } = useSelector((state) => ({ ...state }));\r\n  const dispatch = useDispatch();\r\n\r\n  const [orders, setOrders] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    loadOrders();\r\n  }, []);\r\n\r\n  const loadOrders = () => {\r\n    setLoading(true);\r\n    getUserOrders(user.token).then((res) => {\r\n      console.log(res.data);\r\n      setOrders(res.data);\r\n      setLoading(false);\r\n    });\r\n  };\r\n\r\n  const showOrderInTable = (order) => (\r\n    <table className=\"table table-bordered\">\r\n      <thead className=\"thead-light\">\r\n        <tr>\r\n          <th scope=\"col\">Title</th>\r\n          <th scope=\"col\">Price</th>\r\n          <th scope=\"col\">Brand</th>\r\n          <th scope=\"col\">Color</th>\r\n          <th scope=\"col\">Quantity</th>\r\n          <th scope=\"col\">Shipping</th>\r\n          <th scope=\"col\">Delivery Status</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {order.products.map((p, i) => (\r\n          <tr key={i}>\r\n            <td>\r\n              <strong>{p.product.title}</strong>\r\n            </td>\r\n            <td>{p.product.price}</td>\r\n            <td>{p.product.brand}</td>\r\n            <td>{p.product.color}</td>\r\n            <td>{p.count}</td>\r\n            <td>\r\n              {p.product.shipping === \"Yes\" ? (\r\n                <CheckCircleOutlined style={{ color: \"green\" }} />\r\n              ) : (\r\n                <CloseCircleOutlined className=\"text-danger\" />\r\n              )}\r\n            </td>\r\n            <td>{order.orderStatus}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n\r\n  const showDowloadLink = (order) => (\r\n    <PDFDownloadLink\r\n      document={<Invoice order={order} />}\r\n      fileName=\"invoice.pdf\"\r\n      className=\"btn btn-sm btn-outline-primary\"\r\n    >\r\n      Download Invoice\r\n    </PDFDownloadLink>\r\n  );\r\n\r\n  const showEachOrders = () =>\r\n    orders.map((order, i) => (\r\n      <div key={i} className=\"m-5 p-3 card\">\r\n        {/* <ShowPaymentInfo order={order} /> */}\r\n\r\n        {showOrderInTable(order)}\r\n        <div className=\"row\">\r\n          <div className=\"col text-center\">{showDowloadLink(order)}</div>\r\n        </div>\r\n      </div>\r\n    ));\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-2\">\r\n          <UserNav />\r\n        </div>\r\n\r\n        <div className=\"col\">\r\n          {loading ? (\r\n            <div className=\"h-100 w-100\">\r\n              <Spin className=\"mx-auto my-auto\" />\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <h4>\r\n                {orders.length > 0 ? \"User Purchase Orders\" : \"No Orders\"}\r\n              </h4>\r\n              {showEachOrders()}{\" \"}\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default History;\r\n","import axios from \"axios\";\r\n\r\nexport const userCart = async (cart, authtoken) =>\r\n  await axios.post(\r\n    `${process.env.REACT_APP_API}/user/cart`,\r\n    { cart },\r\n    {\r\n      headers: {\r\n        authtoken,\r\n      },\r\n    }\r\n  );\r\n\r\nexport const getUserCart = async (authtoken) =>\r\n  await axios.get(`${process.env.REACT_APP_API}/user/cart`, {\r\n    headers: {\r\n      authtoken,\r\n    },\r\n  });\r\n\r\nexport const emptyUserCart = async (authtoken) =>\r\n  await axios.delete(`${process.env.REACT_APP_API}/user/cart`, {\r\n    headers: {\r\n      authtoken,\r\n    },\r\n  });\r\n\r\nexport const saveUserAddress = async (authtoken, address) =>\r\n  await axios.put(\r\n    `${process.env.REACT_APP_API}/user/address`,\r\n    { address },\r\n    {\r\n      headers: {\r\n        authtoken,\r\n      },\r\n    }\r\n  );\r\n\r\nexport const applyDiscount = async (coupon, authtoken) =>\r\n  await axios.post(`${process.env.REACT_APP_API}/user/cart/coupon`, coupon, {\r\n    headers: {\r\n      authtoken,\r\n    },\r\n  });\r\n\r\nexport const createOrder = async (paymentIntent, authtoken) =>\r\n  await axios.post(\r\n    `${process.env.REACT_APP_API}/user/order`,\r\n    { paymentIntent },\r\n   \r\n    {\r\n      headers: {\r\n        authtoken,\r\n      },\r\n    },\r\n   // {address},\r\n  );\r\n\r\nexport const getUserOrders = async (authtoken) =>\r\n  await axios.get(`${process.env.REACT_APP_API}/user/orders`, {\r\n    headers: {\r\n      authtoken,\r\n    },\r\n  });\r\n\r\nexport const addItemToWishlist = async (productId, authtoken) =>\r\n  await axios.post(\r\n    `${process.env.REACT_APP_API}/user/wishlist`,\r\n    { productId },\r\n    {\r\n      headers: {\r\n        authtoken,\r\n      },\r\n    }\r\n  );\r\n\r\nexport const getUserWishlist = async (authtoken) =>\r\n  await axios.get(`${process.env.REACT_APP_API}/user/wishlist`, {\r\n    headers: {\r\n      authtoken,\r\n    },\r\n  });\r\n\r\nexport const removeProductFromWishlist = async (authtoken, productId) =>\r\n  await axios.put(\r\n    `${process.env.REACT_APP_API}/user/wishlist/${productId}`,\r\n    {},\r\n    {\r\n      headers: {\r\n        authtoken,\r\n      },\r\n    }\r\n  );\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst UserNav = () => (\r\n  <nav>\r\n    <ul className=\"nav flex-column\">\r\n      <li className=\"nav-item\">\r\n        <Link to=\"/user/history\" className=\"nav-link\">\r\n          History\r\n        </Link>\r\n      </li>\r\n\r\n      <li className=\"nav-item\">\r\n        <Link to=\"/user/password\" className=\"nav-link\">\r\n          Password\r\n        </Link>\r\n      </li>\r\n\r\n      <li className=\"nav-item\">\r\n        <Link to=\"/user/wishlist\" className=\"nav-link\">\r\n          Wishlist\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\n\r\nexport default UserNav;\r\n","import {StyleSheet} from \"@react-pdf/renderer\";\n\nexport const styles = StyleSheet.create({\n    body: {\n      paddingTop: 35,\n      paddingBottom: 65,\n      paddingHorizontal: 35,\n    },\n    title: {\n      fontSize: 24,\n      textAlign: \"center\",\n    },\n    author: {\n      fontSize: 12,\n      textAlign: \"center\",\n      marginBottom: 40,\n    },\n    subtitle: {\n      fontSize: 18,\n      margin: 12,\n    },\n    text: {\n      marginTop: 12,\n      fontSize: 14,\n      textAlign: \"justify\",\n    },\n    image: {\n      marginVertical: 15,\n      marginHorizontal: 100,\n    },\n    header: {\n      fontSize: 12,\n      marginBottom: 20,\n      textAlign: \"center\",\n      color: \"grey\",\n    },\n    footer: {\n      padding: \"100px\",\n      fontSize: 12,\n      marginBottom: 20,\n      textAlign: \"center\",\n      color: \"grey\",\n    },\n    pageNumber: {\n      position: \"absolute\",\n      fontSize: 12,\n      bottom: 30,\n      left: 0,\n      right: 0,\n      textAlign: \"center\",\n      color: \"grey\",\n    },\n  });","import React, { useEffect, useState } from \"react\";\nimport { Document, Page, Text, View } from \"@react-pdf/renderer\";\nimport { styles } from \"./pdfStyles\";\n\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHeader,\n  DataTableCell,\n} from \"@david.kucsai/react-pdf-table\";\n\nconst Invoice = ({ order }) => (\n  <Document>\n    <Page size=\"A4\" style={styles.body}>\n      <View>\n        <Text style={styles.header} fixed>\n          {\" \"}\n          ~ {new Date().toLocaleString()} ~{\" \"}\n        </Text>\n        <Text style={styles.title}>Order Invoice</Text>\n        <Text style={styles.author}>First impression</Text>\n        <Text style={styles.subtitle}>Order Summary</Text>\n\n        <Table>\n          <TableHeader>\n            <TableCell>Title</TableCell>\n            <TableCell>Price</TableCell>\n            <TableCell>Quantity</TableCell>\n            <TableCell>Brand</TableCell>\n            <TableCell>Color</TableCell>\n          </TableHeader>\n        </Table>\n        <Table data={order.products}>\n          <TableBody>\n            <DataTableCell getContent={(x) => x.product.title} />\n            <DataTableCell getContent={(x) => ` ₹ ${x.product.price}`} />\n            <DataTableCell getContent={(x) => x.count} />\n            <DataTableCell getContent={(x) => x.product.brand} />\n            <DataTableCell getContent={(x) => x.product.color} />\n          </TableBody>\n        </Table>\n\n        <Text style={styles.text}>\n        <Text>Payment Status: {\"                         \"} { order.paymentIntent.paymentInfo.status} </Text>{\"\\n\"}\n          <Text>Date: {\"                             \"} {new Date(order.createdAt).toLocaleDateString()}</Text>{\"\\n\"}\n          <Text>Order ID: {\"                         \"} { order.paymentIntent.paymentInfo.id} </Text>{\"\\n\"}\n         \n          <Text>STATUS: {\"                           \"} {order.orderStatus}</Text>{\"\\n\"}\n          <Text>\n            Total Paid: {\"                           \"} {\"₹\"}\n\n           \n            {(order.paymentIntent.paymentInfo.stripeResponse.amount / 100).toLocaleString(\"en-IN\")}\n          </Text>{\"\\n\"}{\"\\n\"}\n        </Text>\n        <Text>Name:{\"                         \"}{order.paymentIntent.shippingAdd.name}</Text>\n        <Text>Mobile Num:{\"                   \"}{order.paymentIntent.shippingAdd.mobileNum}</Text>\n        <Text>Email:{\"                        \"}{order.paymentIntent.shippingAdd.email}</Text>\n        \n        <Text>Delivery Address: {\"                   \"}{order.paymentIntent.shippingAdd.add}</Text>\n        <Text style={styles.footer} >Thank You For Shopping With Us</Text>\n      </View>\n    </Page>\n  </Document>\n);\n\nexport default Invoice;\n"],"sourceRoot":""}