{"version":3,"sources":["pages/auth/RegisterComplete.js"],"names":["RegisterComplete","history","useState","email","setEmail","password","setPassword","dispatch","useDispatch","useEffect","window","localStorage","getItem","handleSubmit","e","a","preventDefault","toast","error","length","auth","signInWithEmailLink","location","href","user","emailVerified","removeItem","currentUser","updatePassword","getIdTokenResult","idTokenResult","console","log","createOrUpdateUser","token","then","res","type","payload","name","data","role","_id","catch","err","push","message","className","onSubmit","value","disabled","onChange","target","placeholder","autoFocus"],"mappings":"+LAuGeA,UAjGU,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACdC,mBAAS,IADK,mBACjCC,EADiC,KAC1BC,EAD0B,OAERF,mBAAS,IAFD,mBAEjCG,EAFiC,KAEvBC,EAFuB,KAKpCC,EAAWC,cAEfC,qBAAU,WACRL,EAASM,OAAOC,aAAaC,QAAQ,2BAGpC,CAACX,IAEJ,IAAMY,EAAY,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,yDACnBD,EAAEE,iBAEGb,GAAUE,EAHI,uBAIjBY,IAAMC,MAAM,kCAJK,+BAQfb,EAASc,OAAS,GARH,uBASjBF,IAAMC,MAAM,+CATK,oDAcIE,IAAKC,oBACxBlB,EACAO,OAAOY,SAASC,MAhBD,mBAmBNC,KAAKC,cAnBC,wBAqBff,OAAOC,aAAae,WAAW,wBAE3BF,EAAOJ,IAAKO,YAvBD,UAwBTH,EAAKI,eAAevB,GAxBX,yBAyBamB,EAAKK,mBAzBlB,QAyBTC,EAzBS,OA2BfC,QAAQC,IAAI,OAAQR,EAAM,gBAAiBM,GAE3CG,YAAmBH,EAAcI,OAC9BC,MAAK,SAACC,GACL7B,EAAS,CACP8B,KAAM,iBACNC,QAAS,CACPC,KAAMH,EAAII,KAAKD,KACfpC,MAAOiC,EAAII,KAAKrC,MAChB+B,MAAOJ,EAAcI,MACrBO,KAAML,EAAII,KAAKC,KACfC,IAAKN,EAAII,KAAKE,UAInBC,OAAM,SAACC,GAAD,OAASb,QAAQC,IAAIY,MAG9B3C,EAAQ4C,KAAK,KA7CE,0DAgDjBd,QAAQC,IAAR,MACAf,IAAMC,MAAM,KAAM4B,SAjDD,0DAAH,sDAwElB,OACE,qBAAKC,UAAU,gBAAf,SACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,uBAAf,UACE,mDAtBN,uBAAMC,SAAUnC,EAAhB,UACE,uBAAOwB,KAAK,QAAQU,UAAU,eAAeE,MAAO9C,EAAO+C,UAAQ,IAEnE,uBACEb,KAAK,WACLU,UAAU,eACVE,MAAO5C,EACP8C,SAAU,SAACrC,GAAD,OAAOR,EAAYQ,EAAEsC,OAAOH,QACtCI,YAAY,WACZC,WAAS,IAEX,uBACA,wBAAQjB,KAAK,SAASU,UAAU,iBAAhC","file":"static/js/45.73c36499.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { auth } from \"../../firebase\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { createOrUpdateUser } from \"../../functions/auth\";\r\n\r\nconst RegisterComplete = ({ history }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  // const { user } = useSelector((state) => ({ ...state }));\r\n  let dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setEmail(window.localStorage.getItem(\"emailForRegistration\"));\r\n    // console.log(window.location.href);\r\n    // console.log(window.localStorage.getItem(\"emailForRegistration\"));\r\n  }, [history]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // validation\r\n    if (!email || !password) {\r\n      toast.error(\"Email and password is required\");\r\n      return;\r\n    }\r\n\r\n    if (password.length < 6) {\r\n      toast.error(\"Password must be at least 6 characters long\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const result = await auth.signInWithEmailLink(\r\n        email,\r\n        window.location.href\r\n      );\r\n      //   console.log(\"RESULT\", result);\r\n      if (result.user.emailVerified) {\r\n        // remove user email fom local storage\r\n        window.localStorage.removeItem(\"emailForRegistration\");\r\n        // get user id token\r\n        let user = auth.currentUser;\r\n        await user.updatePassword(password);\r\n        const idTokenResult = await user.getIdTokenResult();\r\n        // redux store\r\n        console.log(\"user\", user, \"idTokenResult\", idTokenResult);\r\n\r\n        createOrUpdateUser(idTokenResult.token)\r\n          .then((res) => {\r\n            dispatch({\r\n              type: \"LOGGED_IN_USER\",\r\n              payload: {\r\n                name: res.data.name,\r\n                email: res.data.email,\r\n                token: idTokenResult.token,\r\n                role: res.data.role,\r\n                _id: res.data._id,\r\n              },\r\n            });\r\n          })\r\n          .catch((err) => console.log(err));\r\n\r\n        // redirect\r\n        history.push(\"/\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast.error(error.message);\r\n    }\r\n  };\r\n\r\n  const completeRegistrationForm = () => (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"email\" className=\"form-control\" value={email} disabled />\r\n\r\n      <input\r\n        type=\"password\"\r\n        className=\"form-control\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        placeholder=\"Password\"\r\n        autoFocus\r\n      />\r\n      <br />\r\n      <button type=\"submit\" className=\"btn btn-raised\">\r\n        Complete Registration\r\n      </button>\r\n    </form>\r\n  );\r\n\r\n  return (\r\n    <div className=\"container p-5\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 offset-md-3\">\r\n          <h4>Register Complete</h4>\r\n          {completeRegistrationForm()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterComplete;\r\n"],"sourceRoot":""}